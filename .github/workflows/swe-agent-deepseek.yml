# Example workflow: SWE-Agent with DeepSeek (Cost-effective option)
name: SWE-Agent with DeepSeek

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  swe-agent:
    runs-on: ubuntu-latest
    name: AI Code Assistant (DeepSeek)
    
    steps:
      - name: SWE-Agent Resolver
        uses: nimishchaudhari/swe-agent-resolver@v1
        with:
          model_name: 'deepseek/deepseek-chat'  # Very cost-effective
          trigger_phrase: '@swe-agent'
          max_cost: '2.00'  # Lower cost limit for budget-friendly option
          allowed_tools: 'str_replace_editor,bash,file_viewer,python_executor'
          custom_instructions: 'Focus on code quality and best practices.'
          fallback_models: 'deepseek/deepseek-coder,gpt-3.5-turbo'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          deepseek_api_key: ${{ secrets.DEEPSEEK_API_KEY }}
          # Fallback API key
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}